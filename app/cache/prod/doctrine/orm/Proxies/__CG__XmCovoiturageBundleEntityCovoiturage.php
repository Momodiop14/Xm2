<?php

namespace Proxies\__CG__\Xm\CovoiturageBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Covoiturage extends \Xm\CovoiturageBundle\Entity\Covoiturage implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'id', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'placesDispo', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'dateDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'dateRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'heureDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'heureRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'addressDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'addressRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'resume', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'ville_depart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'ville_arrivee', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'initiateur');
        }

        return array('__isInitialized__', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'id', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'placesDispo', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'dateDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'dateRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'heureDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'heureRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'addressDepart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'addressRetour', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'resume', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'ville_depart', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'ville_arrivee', '' . "\0" . 'Xm\\CovoiturageBundle\\Entity\\Covoiturage' . "\0" . 'initiateur');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Covoiturage $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPlacesDispo($placesDispo)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPlacesDispo', array($placesDispo));

        return parent::setPlacesDispo($placesDispo);
    }

    /**
     * {@inheritDoc}
     */
    public function getPlacesDispo()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPlacesDispo', array());

        return parent::getPlacesDispo();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateDepart($dateDepart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateDepart', array($dateDepart));

        return parent::setDateDepart($dateDepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateDepart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateDepart', array());

        return parent::getDateDepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateRetour($dateRetour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateRetour', array($dateRetour));

        return parent::setDateRetour($dateRetour);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateRetour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateRetour', array());

        return parent::getDateRetour();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureDepart($heureDepart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureDepart', array($heureDepart));

        return parent::setHeureDepart($heureDepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureDepart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureDepart', array());

        return parent::getHeureDepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureRetour($heureRetour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureRetour', array($heureRetour));

        return parent::setHeureRetour($heureRetour);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureRetour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureRetour', array());

        return parent::getHeureRetour();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressDepart($addressDepart)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressDepart', array($addressDepart));

        return parent::setAddressDepart($addressDepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressDepart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressDepart', array());

        return parent::getAddressDepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setAddressRetour($addressRetour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAddressRetour', array($addressRetour));

        return parent::setAddressRetour($addressRetour);
    }

    /**
     * {@inheritDoc}
     */
    public function getAddressRetour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAddressRetour', array());

        return parent::getAddressRetour();
    }

    /**
     * {@inheritDoc}
     */
    public function setResume($resume)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResume', array($resume));

        return parent::setResume($resume);
    }

    /**
     * {@inheritDoc}
     */
    public function getResume()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResume', array());

        return parent::getResume();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilleDepart(\Xm\CovoiturageBundle\Entity\Ville $villeDepart = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilleDepart', array($villeDepart));

        return parent::setVilleDepart($villeDepart);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleDepart()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleDepart', array());

        return parent::getVilleDepart();
    }

    /**
     * {@inheritDoc}
     */
    public function setVilleArrivee(\Xm\CovoiturageBundle\Entity\Ville $villeArrivee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVilleArrivee', array($villeArrivee));

        return parent::setVilleArrivee($villeArrivee);
    }

    /**
     * {@inheritDoc}
     */
    public function getVilleArrivee()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVilleArrivee', array());

        return parent::getVilleArrivee();
    }

    /**
     * {@inheritDoc}
     */
    public function setInitiateur(\Xm\UserBundle\Entity\User $initiateur = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInitiateur', array($initiateur));

        return parent::setInitiateur($initiateur);
    }

    /**
     * {@inheritDoc}
     */
    public function getInitiateur()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInitiateur', array());

        return parent::getInitiateur();
    }

}
